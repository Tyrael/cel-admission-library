name: "Release"
on:
  push:
    branches-ignore:
      - "**"
    tags:
      - "v*"

jobs:

  test-all-policies:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: start minikube
      id: minikube
      uses: slashben/setup-minikube@master
      with:
          feature-gates: 'ValidatingAdmissionPolicy=true'
          extra-config: 'apiserver.runtime-config=admissionregistration.k8s.io/v1alpha1'
          kubernetes-version: 1.26.0
          container-runtime: containerd
    - uses: actions/setup-python@v4
      with:
        python-version: '3.10' 
    - uses: azure/setup-kubectl@v3
    - name: Running all control policy tests
      run: |
        pip install -r requirements.txt
        ./scripts/run-all-control-tests.sh
    
  release:
    needs: test-all-policies
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - uses: actions/checkout@v3
      
      - name: Verify release tagged commit is on main
        run: |
          git fetch origin main
          git merge-base --is-ancestor ${GITHUB_REF##*/} origin/main && echo "${GITHUB_REF##*/} is a commit on main!"
      
      - name: Create release artifacts
        run: |
          mkdir release
          ./scripts/create-release-objects.sh release      
      
      - name: Create a GitHub release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "${{ github.ref_name }}"
          release_name: "Release ${{ github.ref_name }}"
          draft: false
          prerelease: false
      
      - name: Publish policy object artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: release/kubescape-validating-admission-policies.yaml
          asset_name: kubescape-validating-admission-policies.yaml
          asset_content_type: text/yaml
      
      - name: Publish policy configuration CRD artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: configuration/policy-configuration-definition.yaml
          asset_name: policy-configuration-definition.yaml
          asset_content_type: text/yaml
      
      - name: Publish policy configuration CRD artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: configuration/policy-configuration-definition.yaml
          asset_name: policy-configuration-definition.yaml
          asset_content_type: text/yaml
      
      - name: Publish basic policy configuration 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: configuration/basic-control-configuration.yaml
          asset_name: basic-control-configuration.yaml
          asset_content_type: text/yaml